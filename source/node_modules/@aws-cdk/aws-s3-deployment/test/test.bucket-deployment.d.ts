import { Test } from 'nodeunit';
declare const _default: {
    'deploy from local directory asset'(test: Test): void;
    'deploy from local directory assets'(test: Test): void;
    'fails if local asset is a non-zip file'(test: Test): void;
    'deploy from a local .zip file'(test: Test): void;
    'honors passed asset options'(test: Test): void;
    'retainOnDelete can be used to retain files when resource is deleted'(test: Test): void;
    'user metadata is correctly transformed'(test: Test): void;
    'system metadata is correctly transformed'(test: Test): void;
    'expires type has correct values'(test: Test): void;
    'cache control type has correct values'(test: Test): void;
    'storage class type has correct values'(test: Test): void;
    'server side encryption type has correct values'(test: Test): void;
    'distribution can be used to provide a CloudFront distribution for invalidation'(test: Test): void;
    'invalidation can happen without distributionPaths provided'(test: Test): void;
    'fails if distribution paths provided but not distribution ID'(test: Test): void;
    'lambda execution role gets permissions to read from the source bucket and read/write in destination'(test: Test): void;
    'memoryLimit can be used to specify the memory limit for the deployment resource handler'(test: Test): void;
    'deployment allows custom role to be supplied'(test: Test): void;
};
export = _default;
