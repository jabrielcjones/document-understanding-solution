{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { Fragment } from 'react';\nimport classNames from 'classnames';\nimport css from './Card.scss';\nexport const CARD_PALETTES = ['blue', 'black', 'teal', 'purple'];\nexport const CARD_VOLUMES = ['loud', 'conversational', 'quiet'];\nCard.defaultProps = {\n  className: '',\n  palette: 'black',\n  volume: 'conversational'\n};\nexport default function Card(_ref) {\n  let {\n    children,\n    className,\n    icon,\n    palette,\n    title,\n    subtitle,\n    volume\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"icon\", \"palette\", \"title\", \"subtitle\", \"volume\"]);\n\n  const cardClassNames = classNames(css.card, css[palette], css[volume], className);\n\n  function handleKeyPress() {\n    if (!rest.onClick) return;\n    const code = event.keyCode || event.which;\n    if (code === 13) rest.onClick();\n  }\n\n  return __jsx(\"div\", _extends({\n    className: cardClassNames,\n    onKeyPress: handleKeyPress\n  }, rest, {\n    tabIndex: 0\n  }), children ? children : __jsx(Fragment, null, icon && __jsx(\"div\", {\n    className: css.icon\n  }, icon), __jsx(\"div\", null, title && __jsx(\"h3\", {\n    className: css.title\n  }, title), subtitle && __jsx(\"p\", {\n    className: css.subtitle\n  }, subtitle))));\n}","map":null,"metadata":{},"sourceType":"module"}