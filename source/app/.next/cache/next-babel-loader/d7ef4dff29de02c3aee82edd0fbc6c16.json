{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React from 'react';\nimport classNames from 'classnames';\nimport css from './Loading.scss';\nLoading.defaultProps = {\n  overlay: true,\n  size: 96,\n  color: '#aab7b8',\n  thickness: 2\n};\nexport default function Loading(_ref) {\n  let {\n    className,\n    overlay,\n    color,\n    size,\n    thickness\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"overlay\", \"color\", \"size\", \"thickness\"]);\n\n  const loadingClassNames = classNames(css.loading, className, {\n    [css.overlay]: overlay\n  });\n  return __jsx(\"div\", _extends({\n    className: loadingClassNames\n  }, rest), __jsx(\"svg\", {\n    width: size,\n    height: size,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\"\n  }, __jsx(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: thickness,\n    r: \"48\",\n    strokeDasharray: \"226.1946710584651 77.39822368615503\",\n    transform: \"rotate(239.89 50 50)\"\n  }, __jsx(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    calcMode: \"linear\",\n    values: \"0 50 50;360 50 50\",\n    keyTimes: \"0;1\",\n    dur: \"0.8s\",\n    begin: \"0s\",\n    repeatCount: \"indefinite\"\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}