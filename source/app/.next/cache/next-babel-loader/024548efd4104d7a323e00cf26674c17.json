{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { Fragment, useRef, useEffect } from \"react\";\nimport { groupWith } from \"ramda\";\nimport cs from \"classnames\";\nimport Button from \"../../components/Button/Button\";\nimport css from \"./KeyValueList.scss\";\nexport default function KeyValueList({\n  kvPairs,\n  visible,\n  pageCount,\n  currentPageNumber,\n  onSwitchPage,\n  onRedact,\n  onHighlight,\n  showRedaction,\n  onRedactAll,\n  onDownload\n}) {\n  const container = useRef();\n  useEffect(() => {\n    if (visible && container.current) {\n      const firstOnThisPage = container.current.querySelector(`.${css.onThisPage}`);\n      if (firstOnThisPage) firstOnThisPage.scrollIntoView();\n    }\n  }, [currentPageNumber, visible]);\n\n  if (!kvPairs.length && visible) {\n    return __jsx(\"p\", {\n      className: cs(css.noKv)\n    }, \"No Key-Value Pairs detected\");\n  }\n\n  return __jsx(\"div\", {\n    className: cs(css.kvList, visible && css.visible),\n    ref: container\n  }, __jsx(\"ul\", null, __jsx(\"h4\", null, \"Key-Value Pairs : \", kvPairs.length || 0, \" Found\"), groupWith((a, b) => a.pageNumber === b.pageNumber)(kvPairs).map((pairs, i) => __jsx(Fragment, {\n    key: pairs[0].pageNumber\n  }, pageCount > 1 ? __jsx(\"li\", {\n    key: `pn${i}`,\n    className: cs(css.pageSeparator, pairs[0].pageNumber === currentPageNumber && css.onThisPage)\n  }, \"Page \", pairs[0].pageNumber) : null, pairs.map(({\n    id,\n    key,\n    value,\n    pageNumber,\n    keyBoundingBox,\n    valueBoundingBox\n  }, i) => __jsx(\"li\", {\n    key: i,\n    className: cs(css.kv, pageNumber === currentPageNumber && css.onThisPage, showRedaction && css.hasRedact),\n    onClick: () => {\n      onHighlight(id);\n      onSwitchPage(pageNumber);\n    }\n  }, __jsx(\"h5\", null, key), __jsx(\"p\", null, value && String(value).trim() || __jsx(\"em\", null, \"no value\"), \" \"), showRedaction ? __jsx(\"a\", {\n    title: \"Redact this value\",\n    className: css.valueRedact,\n    onClick: e => {\n      e.stopPropagation();\n      onRedact(valueBoundingBox, pageNumber);\n      onSwitchPage(pageNumber);\n    }\n  }, \"Redact\") : null))))), __jsx(\"footer\", {\n    className: css.actions\n  }, showRedaction ? __jsx(Button, {\n    className: css.redactButton,\n    onClick: onRedactAll\n  }, \"Redact All Values\") : __jsx(Button, {\n    className: css.downloadButton,\n    onClick: onDownload\n  }, \"Download CSV\")));\n}","map":null,"metadata":{},"sourceType":"module"}