{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport css from './FormInput.scss';\nexport const INPUT_TYPES = ['text', 'textarea', 'checkbox', 'radio', 'search', 'password'];\nconst FormInput = /*#__PURE__*/forwardRef(function FormInput(_ref, ref) {\n  let {\n    children,\n    className,\n    disabled,\n    error,\n    label,\n    type,\n    light,\n    white\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"disabled\", \"error\", \"label\", \"type\", \"light\", \"white\"]);\n\n  const statusClassNames = classNames({\n    [css.light]: !!light,\n    [css.white]: !!white,\n    [css.disabled]: !!disabled,\n    [css.error]: !!error,\n    [css.hasLabel]: !!label\n  });\n  const inputClassNames = classNames(css.input, statusClassNames);\n  const labelClassNames = classNames(css.label, className, {\n    [css[type]]: type === 'search' || type === 'checkbox' || type === 'radio'\n  });\n  return __jsx(\"label\", {\n    className: labelClassNames\n  }, (type === 'checkbox' || type === 'radio') && __jsx(React.Fragment, null, __jsx(\"input\", _extends({\n    ref: ref,\n    type: type,\n    className: statusClassNames,\n    disabled: disabled\n  }, rest)), __jsx(\"span\", null)), label, (type === 'text' || type === 'password') && __jsx(\"input\", _extends({\n    ref: ref,\n    type: type,\n    className: inputClassNames,\n    disabled: disabled\n  }, rest)), type === 'textarea' && __jsx(\"textarea\", _extends({\n    ref: ref,\n    className: inputClassNames,\n    disabled: disabled\n  }, rest), children), type === 'search' && __jsx(React.Fragment, null, __jsx(\"input\", _extends({\n    type: \"text\",\n    ref: ref,\n    className: inputClassNames,\n    disabled: disabled,\n    enterKeyHint: \"search\"\n  }, rest)), __jsx(\"svg\", {\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m16.6177513 14.496431 4.8068699 4.8068699c.5857864.5857864.5857864 1.5355339 0 2.1213203s-1.5355339.5857864-2.1213203 0l-4.8068699-4.8068699c-1.2814131.8723474-2.8293751 1.3822487-4.496431 1.3822487-4.418278 0-8-3.581722-8-8s3.581722-8 8-8 8 3.581722 8 8c0 1.6670559-.5099013 3.2150179-1.3822487 4.496431zm-6.6177513.503569c2.7614237 0 5-2.2385763 5-5 0-2.76142375-2.2385763-5-5-5-2.76142375 0-5 2.23857625-5 5 0 2.7614237 2.23857625 5 5 5z\",\n    fillRule: \"evenodd\"\n  }))));\n});\nFormInput.defaultProps = {\n  disabled: null,\n  label: '',\n  type: 'text'\n};\nexport default FormInput;","map":null,"metadata":{},"sourceType":"module"}