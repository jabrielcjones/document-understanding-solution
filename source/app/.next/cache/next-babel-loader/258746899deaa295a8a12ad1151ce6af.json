{"ast":null,"code":"/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport { pipe, trim, view } from 'ramda';\nimport { getMetaLens } from './data';\nexport const getCurrentPageNumber = state => view(getMetaLens('currentPageNumber'), state);\nexport const getDocumentsNextToken = state => view(getMetaLens('documentsNextToken'), state);\nexport const getDocumentsTotal = state => view(getMetaLens('documentsTotal'), state);\nexport const getSearchQuery = state => view(getMetaLens('searchQuery'), state);\nexport const getDocumentSearchQuery = state => view(getMetaLens('documentSearchQuery'), state);\nexport const getCleanSearchQuery = state => pipe(view(getMetaLens('searchQuery')), trim)(state);\nexport const getSearchPersona = state => view(getMetaLens('searchPersona'), state);\nexport const getSearchStatus = state => view(getMetaLens('searchStatus'), state);\nexport const getSearchTotalDocuments = state => view(getMetaLens('searchTotalDocuments'), state);\nexport const getSearchTotalMatches = state => view(getMetaLens('searchTotalMatches'), state);\nexport const getKendraQueryId = state => view(getMetaLens('kendraQueryId'), state);\nexport const getKendraFilteredQueryId = state => view(getMetaLens('kendraFilteredQueryId'), state);\nexport const getKendraResultCount = state => view(getMetaLens('kendraTotalResults'), state);\nexport const getKendraFilteredResultCount = state => view(getMetaLens('kendraTotalFilteredResults'), state);","map":null,"metadata":{},"sourceType":"module"}