{"ast":null,"code":"import _regeneratorRuntime from \"/home/jabrielcjones/dev/belle_fleur/document-understanding-solution/source/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/jabrielcjones/dev/belle_fleur/document-understanding-solution/source/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/jabrielcjones/dev/belle_fleur/document-understanding-solution/source/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/jabrielcjones/dev/belle_fleur/document-understanding-solution/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport { createAction } from \"redux-actions\";\nimport { normalize } from \"normalizr\";\nimport { API, Auth } from \"aws-amplify\";\nimport { ENABLE_KENDRA } from '../../../constants/configs';\nimport { SEARCH, CLEAR_SEARCH_RESULTS, SUBMIT_FEEDBACK } from \"../../../constants/action-types\";\nimport { searchResultsSchema, kendraResultsSchema, kendraFilteredResultsSchema } from \"./data\";\n/**\n * Get documents from TextractDemoTextractAPI\n */\n\nexport var search = createAction(SEARCH, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n    var headers, _yield$Promise$all, _yield$Promise$all2, esResponse, kendraResponse, kendraFilteredResponse, data, searchTotalMatches, searchTotalDocuments, esResults, kendraQueryId, kendraTotalResults, kendraFilteredQueryId, kendraTotalFilteredResults, kendraData, kendraFilteredData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = \"Bearer \";\n            _context.next = 3;\n            return Auth.currentSession();\n\n          case 3:\n            _context.t1 = _context.sent.getIdToken().getJwtToken();\n            _context.t2 = _context.t0.concat.call(_context.t0, _context.t1);\n            headers = {\n              Authorization: _context.t2\n            };\n            _context.next = 8;\n            return Promise.all([API.get(\"TextractDemoTextractAPI\", \"search\", {\n              headers: headers,\n              response: true,\n              queryStringParameters: _objectSpread({}, params)\n            }), ENABLE_KENDRA ? API.post(\"TextractDemoTextractAPI\", \"searchkendra\", {\n              headers: headers,\n              response: true,\n              queryStringParameters: {},\n              body: {\n                query: params.k,\n                pageNumber: 1,\n                pageSize: 10\n              }\n            }) : null, ENABLE_KENDRA && params.persona ? API.post(\"TextractDemoTextractAPI\", \"searchkendra\", {\n              headers: headers,\n              response: true,\n              queryStringParameters: {},\n              body: {\n                query: params.k,\n                tag: params.persona,\n                pageNumber: 1,\n                pageSize: 10\n              }\n            }) : null]);\n\n          case 8:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n            esResponse = _yield$Promise$all2[0];\n            kendraResponse = _yield$Promise$all2[1];\n            kendraFilteredResponse = _yield$Promise$all2[2];\n            data = Array.isArray(esResponse.data) ? esResponse.data : [];\n            searchTotalMatches = 0;\n            searchTotalDocuments = 0;\n            esResults = data.map(function (result) {\n              searchTotalMatches += result.count;\n              if (result.count) searchTotalDocuments++;\n              return _objectSpread(_objectSpread({}, result), {}, {\n                name: result.name.replace(/^.*\\//, \"\")\n              });\n            });\n            kendraQueryId = ENABLE_KENDRA ? kendraResponse.data.QueryId : null;\n            kendraTotalResults = ENABLE_KENDRA ? kendraResponse.data.TotalNumberOfResults : null;\n            kendraFilteredQueryId = ENABLE_KENDRA && params.persona ? kendraFilteredResponse.data.QueryId : null;\n            kendraTotalFilteredResults = ENABLE_KENDRA && params.persona ? kendraFilteredResponse.data.TotalNumberOfResults : null;\n            kendraData = ENABLE_KENDRA ? normalize(kendraResponse.data.ResultItems, kendraResultsSchema).entities : {};\n            kendraFilteredData = ENABLE_KENDRA && params.persona ? normalize(kendraFilteredResponse.data.ResultItems, kendraFilteredResultsSchema).entities : {};\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, normalize(esResults, searchResultsSchema).entities), kendraData), kendraFilteredData), {}, {\n              meta: {\n                searchTotalMatches: searchTotalMatches,\n                searchTotalDocuments: searchTotalDocuments,\n                kendraQueryId: kendraQueryId,\n                kendraFilteredQueryId: kendraFilteredQueryId,\n                kendraTotalResults: kendraTotalResults,\n                kendraTotalFilteredResults: kendraTotalFilteredResults\n              }\n            }));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var submitKendraFeedback = createAction(SUBMIT_FEEDBACK, /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var relevance, queryId, resultId, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            relevance = _ref2.relevance, queryId = _ref2.queryId, resultId = _ref2.resultId;\n            _context2.t0 = API;\n            _context2.t1 = \"Bearer \";\n            _context2.next = 5;\n            return Auth.currentSession();\n\n          case 5:\n            _context2.t2 = _context2.sent.getIdToken().getJwtToken();\n            _context2.t3 = _context2.t1.concat.call(_context2.t1, _context2.t2);\n            _context2.t4 = {\n              Authorization: _context2.t3\n            };\n            _context2.t5 = {\n              relevance: relevance,\n              queryId: queryId,\n              resultId: resultId\n            };\n            _context2.t6 = {\n              headers: _context2.t4,\n              response: true,\n              body: _context2.t5\n            };\n            _context2.next = 12;\n            return _context2.t0.post.call(_context2.t0, \"TextractDemoTextractAPI\", \"feedbackkendra\", _context2.t6);\n\n          case 12:\n            response = _context2.sent;\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n/**\n * Clear search results\n */\n\nexport var clearSearchResults = createAction(CLEAR_SEARCH_RESULTS, function () {\n  return {\n    searchResults: [],\n    kendraResults: [],\n    kendraFilteredResults: undefined,\n    meta: {\n      searchTotalMatches: 0,\n      searchTotalDocuments: 0,\n      kendraQueryId: null\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}