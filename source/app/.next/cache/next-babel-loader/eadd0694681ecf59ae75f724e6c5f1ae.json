{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport Button from '../Button/Button';\nimport { submitDocument, submitDocuments, fetchDocuments } from '../../store/entities/documents/actions';\nimport { getSampleDocuments, getSampleCollections } from '../../store/entities/sampleDocuments/selectors';\nimport { clearSearchQuery } from '../../store/entities/meta/actions';\nimport css from './SampleCollections.scss';\nimport cs from 'classnames';\nimport Loading from '../Loading/Loading';\n\nfunction SampleCollections(_ref) {\n  var dispatch = _ref.dispatch,\n      sampleDocuments = _ref.sampleDocuments,\n      sampleCollections = _ref.sampleCollections;\n\n  var _useState = useState(null),\n      previewDoc = _useState[0],\n      setPreviewDoc = _useState[1];\n\n  return __jsx(\"div\", null, __jsx(\"ul\", {\n    className: css.list\n  }, sampleDocuments.map(function (_ref2) {\n    var id = _ref2.id,\n        object = _ref2.object,\n        title = _ref2.title,\n        previewImage = _ref2.previewImage;\n\n    var submitAction = function submitAction() {\n      return submitDocument({\n        sample: true,\n        key: object\n      });\n    };\n\n    return __jsx(\"li\", {\n      key: id,\n      className: css.item\n    }, __jsx(\"div\", {\n      className: css.doc\n    }, __jsx(\"img\", {\n      src: previewImage,\n      onClick: function onClick() {\n        return setPreviewDoc({\n          id: id,\n          object: object,\n          title: title,\n          previewImage: previewImage,\n          submitAction: submitAction\n        });\n      }\n    })), title, __jsx(AddButton, {\n      action: function action() {\n        return dispatch(submitAction());\n      }\n    }));\n  }), sampleCollections.map(function (_ref3) {\n    var id = _ref3.id,\n        objects = _ref3.objects,\n        title = _ref3.title,\n        previewImage = _ref3.previewImage;\n\n    var submitAction = function submitAction() {\n      return submitDocuments({\n        objects: objects.map(function (x) {\n          return {\n            sample: true,\n            key: x\n          };\n        })\n      });\n    };\n\n    return __jsx(\"li\", {\n      key: id,\n      className: cs(css.item, css.collection)\n    }, __jsx(\"div\", {\n      className: css.docPile\n    }, __jsx(\"div\", {\n      className: css.doc\n    }, __jsx(\"img\", {\n      src: previewImage,\n      onClick: function onClick() {\n        return setPreviewDoc({\n          id: id,\n          objects: objects,\n          title: title,\n          previewImage: previewImage,\n          submitAction: submitAction\n        });\n      }\n    })), __jsx(\"div\", {\n      className: css.doc\n    }), __jsx(\"div\", {\n      className: css.doc\n    })), title, __jsx(\"br\", null), \"(\", objects.length, \" documents)\", __jsx(AddButton, {\n      action: function action() {\n        return dispatch(submitAction());\n      }\n    }));\n  })), previewDoc ? /*#__PURE__*/ReactDOM.createPortal(__jsx(\"div\", {\n    className: css.previewDoc\n  }, __jsx(\"img\", {\n    src: previewDoc.previewImage\n  }), __jsx(\"div\", {\n    className: css.details\n  }, __jsx(\"h3\", null, previewDoc.title), previewDoc.object ? __jsx(\"p\", null, previewDoc.object.split('/').pop()) : __jsx(\"p\", null, previewDoc.objects.length, \" documents\"), __jsx(\"p\", null, __jsx(AddButton, {\n    simple: false,\n    action: function action() {\n      return dispatch(previewDoc.submitAction());\n    }\n  })), __jsx(\"p\", null, __jsx(Button, {\n    simple: true,\n    onClick: function onClick() {\n      return setPreviewDoc(null);\n    }\n  }, \"Cancel\")))), document.body) : null);\n}\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    sampleDocuments: getSampleDocuments(state),\n    sampleCollections: getSampleCollections(state)\n  };\n})(SampleCollections);\n\nfunction AddButton(_ref4) {\n  var action = _ref4.action,\n      _ref4$simple = _ref4.simple,\n      simple = _ref4$simple === void 0 ? true : _ref4$simple;\n  var dispatch = useDispatch();\n\n  var _useState2 = useState(false),\n      pending = _useState2[0],\n      setPending = _useState2[1];\n\n  return __jsx(Button, {\n    className: cs(css.spinnerButton, pending && css.pending),\n    simple: simple,\n    disabled: pending,\n    onClick: function onClick() {\n      setPending(true);\n      action().then(function () {\n        dispatch(clearSearchQuery());\n        dispatch(fetchDocuments());\n        Router.push('/documents');\n      });\n    }\n  }, __jsx(\"span\", null, __jsx(Loading, {\n    overlay: false,\n    size: 18,\n    color: \"currentColor\",\n    thickness: 6\n  })), \"Add\");\n}","map":null,"metadata":{},"sourceType":"module"}