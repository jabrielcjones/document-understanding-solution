{"ast":null,"code":"import _extends from \"/home/jabrielcjones/dev/belle_fleur/document-understanding-solution/source/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/home/jabrielcjones/dev/belle_fleur/document-understanding-solution/source/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport Highlight from '../../components/Highlight/Highlight';\nimport Loading from '../../components/Loading/Loading';\nimport { MIN_SEARCH_QUERY_LENGTH } from '../../constants/configs';\nimport { makeDocumentLink } from '../../utils/link-generators';\nimport css from './SearchResults.scss';\nSearchResults.defaultProps = {\n  results: []\n};\nexport default function SearchResults(_ref) {\n  var className = _ref.className,\n      results = _ref.results,\n      searchQuery = _ref.searchQuery,\n      searchStatus = _ref.searchStatus,\n      searchTotalDocuments = _ref.searchTotalDocuments,\n      searchTotalMatches = _ref.searchTotalMatches,\n      isComparing = _ref.isComparing,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"results\", \"searchQuery\", \"searchStatus\", \"searchTotalDocuments\", \"searchTotalMatches\", \"isComparing\"]);\n\n  var searchResultsClassNames = classNames(css.searchResults, className);\n  var isQueryLongEnough = searchQuery && searchQuery.length >= MIN_SEARCH_QUERY_LENGTH;\n  if (!searchStatus || !searchQuery) return null;\n  var highlightRegex = useMemo(function () {\n    var words = searchQuery.split(/\\W+/).filter(Boolean).map(function (x) {\n      return \"\\\\b\".concat(x, \"\\\\b\");\n    });\n    return new RegExp('(?:' + words.join('|') + ')', 'i');\n  }, [searchQuery]);\n  return __jsx(\"nav\", _extends({\n    className: searchResultsClassNames\n  }, rest), __jsx(\"header\", {\n    className: classNames(isComparing && css.comparing)\n  }, __jsx(\"h2\", null, \"Amazon Elasticsearch Service\", !isComparing ? ' Results' : ''), isComparing ? __jsx(\"p\", null, \"Keyword search results\") : null), !isQueryLongEnough && __jsx(\"p\", {\n    className: css.noContent\n  }, \"Enter a search query longer than \", MIN_SEARCH_QUERY_LENGTH - 1, \" characters to initiate a search.\"), !searchTotalDocuments && searchStatus !== 'pending' && __jsx(\"p\", {\n    className: css.noContent\n  }, \"No results found.\"), !!searchTotalDocuments && searchStatus !== 'pending' && __jsx(\"div\", {\n    className: css.searchSummary\n  }, \"Found about \".concat(searchTotalMatches, \" \").concat(searchTotalMatches === 1 ? 'result' : 'results', \" across \").concat(searchTotalDocuments, \" \").concat(searchTotalDocuments === 1 ? 'document' : 'documents')), searchStatus === 'success' && isQueryLongEnough && __jsx(\"ul\", null, results.map(function (_ref2) {\n    var id = _ref2.documentId,\n        count = _ref2.count,\n        name = _ref2.name,\n        lines = _ref2.lines;\n    if (!count) return null;\n    return __jsx(\"li\", {\n      className: css.resultItem,\n      key: id\n    }, __jsx(Link, makeDocumentLink(id), __jsx(\"a\", null, __jsx(\"header\", null, __jsx(\"h3\", null, __jsx(Highlight, {\n      search: highlightRegex\n    }, name))), __jsx(\"ul\", {\n      className: css.lines\n    }, lines.slice(0, 4).map(function (line, i) {\n      return __jsx(\"li\", {\n        key: i\n      }, \"\\u2026\", __jsx(Highlight, {\n        search: highlightRegex\n      }, line), \"\\u2026\");\n    })))));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}