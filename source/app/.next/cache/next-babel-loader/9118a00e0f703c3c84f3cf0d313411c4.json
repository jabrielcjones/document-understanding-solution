{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { throttle } from \"lodash\";\nimport { reject, isNil } from \"ramda\";\nimport Button from \"../Button/Button\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { clearSearchQuery, setSearchQuery, setSearchStatus, setSearchPersona } from \"../../store/entities/meta/actions\";\nimport { getSearchQuery, getSearchStatus, getSearchPersona } from \"../../store/entities/meta/selectors\";\nimport { search, clearSearchResults } from \"../../store/entities/searchResults/actions\";\nimport { MIN_SEARCH_QUERY_LENGTH } from \"../../constants/configs\";\nimport css from \"./SearchBar.scss\";\nSearchBar.defaultProps = {};\n\nfunction SearchBar({\n  className,\n  dispatch,\n  searchQuery,\n  searchPersona,\n  light,\n  suggestions,\n  placeholder\n}) {\n  const searchBarClassNames = classNames(css.searchBar, className);\n  const {\n    0: hasTerm,\n    1: setHasTerm\n  } = useState(!!searchQuery);\n  const handleClearClick = useCallback(() => {\n    dispatch(clearSearchQuery());\n    input.current.value = \"\";\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(clearSearchQuery()); // eslint-disable-next-line\n  }, []);\n  const input = useRef();\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    dispatch(setSearchQuery(input.current.value));\n    dispatch(setSearchPersona(undefined));\n    input.current.blur();\n  }, []);\n  const searchValueChange = useCallback(e => {\n    setHasTerm(!!e.target.value);\n  }, []);\n  useEffect(() => {\n    input.current.value = searchQuery;\n    searchValueChange({\n      target: {\n        value: searchQuery\n      }\n    });\n  }, [searchQuery]);\n  const selectSuggestion = useCallback(q => {\n    dispatch(setSearchQuery(q));\n    dispatch(setSearchPersona(undefined));\n  }, [dispatch]);\n  return __jsx(\"form\", {\n    className: searchBarClassNames,\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: css.wrapper\n  }, __jsx(FormInput, {\n    ref: input,\n    light: light,\n    type: \"search\",\n    className: css.search,\n    placeholder: placeholder || \"Search...\",\n    defaultValue: searchQuery,\n    onChange: searchValueChange\n  }), hasTerm ? __jsx(Button, {\n    type: \"button\",\n    simple: true,\n    palette: \"black\",\n    className: css.clear,\n    onClick: handleClearClick\n  }, __jsx(\"svg\", {\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m12 10.5857864 5.2928932-5.29289318c.3905243-.39052429 1.0236893-.39052429 1.4142136 0s.3905243 1.02368927 0 1.41421356l-5.2928932 5.29289322 5.2928932 5.2928932c.3905243.3905243.3905243 1.0236893 0 1.4142136s-1.0236893.3905243-1.4142136 0l-5.2928932-5.2928932-5.29289322 5.2928932c-.39052429.3905243-1.02368927.3905243-1.41421356 0s-.39052429-1.0236893 0-1.4142136l5.29289318-5.2928932-5.29289318-5.29289322c-.39052429-.39052429-.39052429-1.02368927 0-1.41421356s1.02368927-.39052429 1.41421356 0z\"\n  }))) : null, suggestions ? __jsx(\"div\", {\n    className: css.suggestions\n  }, __jsx(\"ul\", null, suggestions.map(q => __jsx(\"li\", {\n    key: q,\n    onClick: () => selectSuggestion(q)\n  }, q)))) : null), __jsx(Button, {\n    onClick: handleSubmit\n  }, \"Search\"));\n}\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    searchQuery: getSearchQuery(state),\n    searchStatus: getSearchStatus(state),\n    searchPersona: getSearchPersona(state)\n  };\n})(SearchBar);","map":null,"metadata":{},"sourceType":"module"}