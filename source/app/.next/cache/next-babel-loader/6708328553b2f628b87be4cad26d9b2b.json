{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { setCurrentPageNumber } from '../../store/entities/meta/actions';\nimport { getCurrentPageNumber } from '../../store/entities/meta/selectors';\nimport css from './Pager.scss';\nexport default connect(function mapStateToProps(state) {\n  return {\n    currentPageNumber: getCurrentPageNumber(state)\n  };\n})(Pager);\n\nfunction Pager(_ref) {\n  let {\n    dispatch,\n    children,\n    className,\n    currentPageNumber,\n    noContent,\n    pageTotal = 1,\n    subtitle\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"dispatch\", \"children\", \"className\", \"currentPageNumber\", \"noContent\", \"pageTotal\", \"subtitle\"]);\n\n  const pagerClassNames = classNames(css.pager, className);\n  const isSinglePage = pageTotal === 1;\n\n  function handlePrevClick() {\n    const prevPageNumber = Math.max(1, currentPageNumber - 1);\n    dispatch && dispatch(setCurrentPageNumber(prevPageNumber));\n  }\n\n  function handleNextClick() {\n    const nextPageNumber = Math.min(pageTotal, currentPageNumber + 1);\n    dispatch && dispatch(setCurrentPageNumber(nextPageNumber));\n  }\n\n  const makeKeyPressHandler = fn => () => {\n    const code = event.keyCode || event.which;\n    if (code === 13) fn();\n  };\n\n  return __jsx(\"div\", _extends({\n    className: pagerClassNames\n  }, rest), __jsx(\"header\", {\n    className: css.header\n  }, __jsx(\"div\", null, subtitle && __jsx(\"p\", {\n    className: css.subtitle\n  }, subtitle))), children && children(currentPageNumber), noContent && noContent, __jsx(\"footer\", {\n    className: css.footer\n  }, !isSinglePage && __jsx(React.Fragment, null, __jsx(\"svg\", {\n    onClick: handlePrevClick,\n    onKeyPress: makeKeyPressHandler(handlePrevClick),\n    className: currentPageNumber === 1 ? css.disabled : null,\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    tabIndex: currentPageNumber === 1 ? null : 0\n  }, __jsx(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    stroke: \"#fff\",\n    strokeLinecap: \"round\",\n    strokeWidth: \"2\"\n  }, __jsx(\"path\", {\n    d: \"m8 12 6 6\"\n  }), __jsx(\"path\", {\n    d: \"m8 6 6 6\",\n    transform: \"matrix(-1 0 0 1 22 0)\"\n  }))), __jsx(\"span\", null, \"Page \", currentPageNumber, \" of \", pageTotal), __jsx(\"svg\", {\n    onClick: handleNextClick,\n    onKeyPress: makeKeyPressHandler(handleNextClick),\n    className: currentPageNumber === pageTotal ? css.disabled : null,\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    tabIndex: currentPageNumber === pageTotal ? null : 0\n  }, __jsx(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    stroke: \"#fff\",\n    strokeLinecap: \"round\",\n    strokeWidth: \"2\"\n  }, __jsx(\"path\", {\n    d: \"m16 12-6 6\"\n  }), __jsx(\"path\", {\n    d: \"m16 6-6 6\",\n    transform: \"matrix(-1 0 0 1 26 0)\"\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}