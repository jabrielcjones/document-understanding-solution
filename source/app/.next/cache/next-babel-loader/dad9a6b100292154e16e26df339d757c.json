{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { Fragment, useMemo, useState, useCallback, useEffect } from \"react\";\nimport KendraResultTitle from \"../KendraResultTitle/KendraResultTitle\";\nimport KendraHighlightedText from \"../KendraHighlightedText/KendraHighlightedText\";\nimport KendraResultFooter from \"../KendraResultFooter/KendraResultFooter\";\nimport TooltipButton from \"../TooltipButton/TooltipButton\";\nimport styles from \"./KendraTopResults.scss\";\nimport cs from \"classnames\";\n\nfunction getTopAnswer(text) {\n  if (text && text.Highlights) {\n    var _iterator = _createForOfIteratorHelper(text.Highlights),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var highlight = _step.value;\n        var length = highlight.EndOffset - highlight.BeginOffset;\n\n        if (highlight && highlight.TopAnswer && length < MAX_TOP_ANSWER_LENGTH) {\n          return __jsx(\"h1\", null, text.Text.substring(highlight.BeginOffset, highlight.EndOffset));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return null;\n}\n\nexport default function KendraTopResults(_ref) {\n  var results = _ref.results,\n      submitFeedback = _ref.submitFeedback;\n  var renderedResults = useMemo(function () {\n    return results.map(function (result) {\n      var answer = result.AdditionalAttributes.find(function (attr) {\n        return attr.Key === \"AnswerText\";\n      });\n      return __jsx(\"article\", {\n        key: result.id,\n        className: styles.result\n      }, __jsx(KendraResultTitle, {\n        result: result,\n        submitFeedback: submitFeedback\n      }), getTopAnswer(answer.TextWithHighlightsValue), __jsx(\"p\", null, __jsx(KendraHighlightedText, {\n        textWithHighlights: answer.Value.TextWithHighlightsValue\n      })), __jsx(KendraResultFooter, {\n        result: result,\n        submitFeedback: submitFeedback\n      }));\n    });\n  }, [results]);\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var toggleExpanded = useCallback(function () {\n    setExpanded(function (e) {\n      return !e;\n    });\n  }, []);\n  if (!results.length) return null;\n  return __jsx(\"div\", {\n    className: styles.topResults\n  }, __jsx(\"header\", null, __jsx(\"h2\", null, \"Amazon Kendra suggested answers\", __jsx(TooltipButton, {\n    tooltip: __jsx(React.Fragment, null, __jsx(\"h4\", null, \"Amazon Kendra suggested answers\"), __jsx(\"p\", null, \"When you type a question, Kendra uses machine learning algorithms to understand the context and return the most relevant results, whether that be a precise answer or an entire document. Kendra will map to the relevant documents and return a specific answer.\"))\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: \"/static/images/icon_tip.svg\"\n  }), \"More info\")))), __jsx(\"div\", {\n    className: styles.results\n  }, renderedResults[0], renderedResults.length > 1 ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: cs(styles.showMore, expanded && styles.expanded),\n    onClick: toggleExpanded\n  }, \"More suggested answers (\", renderedResults.length - 1, \")\"), expanded ? __jsx(\"div\", null, renderedResults.slice(1)) : null) : null));\n}","map":null,"metadata":{},"sourceType":"module"}