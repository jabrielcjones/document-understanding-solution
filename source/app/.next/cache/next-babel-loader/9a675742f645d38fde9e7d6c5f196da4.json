{"ast":null,"code":"/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport { createAction } from 'redux-actions';\nimport { set } from 'ramda';\nimport { SET_SELECTED_TRACK, SET_HEADER_PROPS, SET_SELECTED_SEARCH, DISMISS_WALKTHROUGH } from '../../constants/action-types.js';\nimport { lensSelectedTrack, lensHeaderProps, lensSelectedSearch, lensDismissedWalkthrough } from './data';\nexport var setSelectedTrack = createAction(SET_SELECTED_TRACK, function (selectedTrack) {\n  localStorage.setItem('track', selectedTrack);\n  return set(lensSelectedTrack, selectedTrack, {});\n});\nexport var setHeaderProps = createAction(SET_HEADER_PROPS, function (props) {\n  return set(lensHeaderProps, props, {});\n});\nexport var setSelectedSearch = createAction(SET_SELECTED_SEARCH, function (searchType) {\n  return set(lensSelectedSearch, searchType, {});\n});\nexport var dismissWalkthrough = createAction(DISMISS_WALKTHROUGH, function () {\n  localStorage.setItem('dismissedWalkthrough', 1);\n  return set(lensDismissedWalkthrough, true, {});\n});","map":null,"metadata":{},"sourceType":"module"}