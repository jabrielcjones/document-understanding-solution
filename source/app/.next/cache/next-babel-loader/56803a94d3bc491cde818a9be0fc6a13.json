{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSearchPersona } from \"../../store/entities/meta/selectors\";\nimport Modal from \"../Modal/Modal\";\nimport Button from \"../Button/Button\";\nimport css from \"./PersonaInfoModal.scss\";\nimport cs from \"classnames\";\nimport FormInput from \"../FormInput/FormInput\";\nvar PERSONA_QUESTIONS = [\"What is muscle dystrophy?\", \"Is Muscular Dystrophy inherited?\", \"What causes Muscular Dystrophy?\"];\n\nfunction PersonaInfoModal(_ref) {\n  var onClose = _ref.onClose,\n      onSubmit = _ref.onSubmit,\n      searchPersona = _ref.searchPersona;\n\n  var _useState = useState(searchPersona),\n      selectedPersona = _useState[0],\n      setSelectedPersona = _useState[1];\n\n  var inputRef = useRef();\n  var submit = useCallback(function (query) {\n    onSubmit(selectedPersona, query);\n  }, [onSubmit, selectedPersona]);\n  var submitForm = useCallback(function (e) {\n    e.preventDefault();\n    submit(inputRef.current.value);\n  }, [submit]);\n\n  var _useState2 = useState(false),\n      apiVisible = _useState2[0],\n      setApiVisible = _useState2[1];\n\n  var toggleAPI = useCallback(function () {\n    return setApiVisible(function (x) {\n      return !x;\n    });\n  }, []);\n  return __jsx(Modal, {\n    title: \"Filter query results on User Context\",\n    onRequestClose: onClose\n  }, __jsx(\"p\", null, \"Amazon Kendra can deliver highly relevant query results based on user name or group membership associated with the content metadata. Follow these simple steps, and see how this feature works.\"), __jsx(\"section\", null, __jsx(\"header\", null, __jsx(\"div\", {\n    className: css.stepLabel\n  }, \"Step 1\"), __jsx(\"p\", null, \"For this demo, we created fictitious users and search queries to showcase how the filtering feature works. Select one of the fictitious users below.\")), __jsx(\"div\", {\n    className: css.personas\n  }, __jsx(\"label\", null, __jsx(\"img\", {\n    src: \"/static/images/healthcare-provider.png\"\n  }), __jsx(\"input\", {\n    name: \"persona\",\n    type: \"radio\",\n    value: \"healthcareprovider\",\n    onChange: function onChange() {\n      return setSelectedPersona(\"healthcareprovider\");\n    },\n    checked: selectedPersona === 'healthcareprovider'\n  }), __jsx(\"h4\", null, \"Healthcare provider\"), __jsx(\"p\", null, \"Has access to information for Healthcare Professionals.\")), __jsx(\"label\", null, __jsx(\"img\", {\n    src: \"/static/images/scientist.png\"\n  }), __jsx(\"input\", {\n    name: \"persona\",\n    type: \"radio\",\n    value: \"scientist\",\n    onChange: function onChange() {\n      return setSelectedPersona(\"scientist\");\n    },\n    checked: selectedPersona === 'scientist'\n  }), __jsx(\"h4\", null, \"Scientist\"), __jsx(\"p\", null, \"Has access to scientific papers and research documents.\")), __jsx(\"label\", null, __jsx(\"img\", {\n    src: \"/static/images/general-public.png\"\n  }), __jsx(\"input\", {\n    name: \"persona\",\n    type: \"radio\",\n    value: \"generalpublic\",\n    onChange: function onChange() {\n      return setSelectedPersona(\"generalpublic\");\n    },\n    checked: selectedPersona === 'generalpublic'\n  }), __jsx(\"h4\", null, \"General public\"), __jsx(\"p\", null, \"Has access to official guidance to prevent and manage diseases/medical conditions.\")), __jsx(\"label\", null, __jsx(\"img\", {\n    src: \"/static/images/nofilter.svg\"\n  }), __jsx(\"input\", {\n    name: \"persona\",\n    type: \"radio\",\n    value: \"\",\n    onChange: function onChange() {\n      return setSelectedPersona(undefined);\n    },\n    checked: !selectedPersona\n  }), __jsx(\"h4\", null, \"No filter\"), __jsx(\"p\", null, \"Use this option for unfiltered search results.\")))), __jsx(\"section\", null, __jsx(\"header\", null, __jsx(\"div\", {\n    className: css.stepLabel\n  }, \"Step 2\"), __jsx(\"p\", null, \"Choose one of the auto suggested queries we\\u2019ve created to demonstrate this feature.\")), __jsx(\"ul\", {\n    className: css.sampleQueries\n  }, PERSONA_QUESTIONS.map(function (q) {\n    return __jsx(\"li\", {\n      onClick: function onClick() {\n        return submit(q);\n      }\n    }, q);\n  }))), __jsx(\"aside\", {\n    className: css.notes\n  }, \"Please note, this demo allows you to upload your own documents. If you do so, Amazon Kendra will index your documents and you'll be able to search through them. However, the filtering feature won't work. The three personas and Medical datasets are used to demonstrate the\", \" \", __jsx(\"strong\", null, \"Filter query results on User Context\"), \" feature.\"), __jsx(\"div\", {\n    className: cs(css.toggleAPI, apiVisible && css.expanded),\n    onClick: toggleAPI\n  }, \"Want to see the query filtering API? Check out the sample code\"), apiVisible && __jsx(React.Fragment, null, __jsx(\"section\", null, __jsx(\"p\", null, \"Amazon Kendra can deliver highly relevant query results based on user name or group membership. To enable this feature, documents must be indexed into Kendra along with their relevance to various users and groups. Queries can then include this information to obtain filtered results sets that matter to specific users. The code snippet below shows how this information is supplied.\", \" \")), __jsx(\"section\", null, __jsx(\"pre\", null, \"\\nresponse = kendra.query(\\n  QueryText = query,\\n  IndexId = index,\\n  AttributeFilter = {\\n    \\\"OrAllFilters\\\": [\\n      {\\n        \\\"EqualsTo\\\": {\\n          \\\"Key\\\": \\\"_user_id\\\",\\n          \\\"Value\\\": {\\n            \\\"StringValue\\\": \\\"user1\\\"\\n          }\\n        }\\n      },\\n      {\\n        \\\"EqualsTo\\\": {\\n          \\\"Key\\\": \\\"_group_ids\\\",\\n          \\\"Value\\\": {\\n            \\\"StringListValue\\\": [\\\"HR\\\", \\\"IT\\\"]\\n          }\\n        }\\n      }\\n    ]\\n  }\\n)\\n\".trim())), __jsx(\"p\", {\n    className: css.learnMore\n  }, __jsx(\"a\", {\n    href: \"https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html\",\n    target: \"_blank\"\n  }, \"Learn more about this feature in the Amazon Kendra Developers page\"))));\n}\n\nexport default connect(function mapStateToProps(state, _ref2) {\n  var trackName = _ref2.trackName;\n  return {\n    searchPersona: getSearchPersona(state)\n  };\n})(PersonaInfoModal);","map":null,"metadata":{},"sourceType":"module"}