{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useCallback, useEffect, useState, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport cs from \"classnames\";\nimport { getSelectedSearch } from \"../../store/ui/selectors\";\nimport { setSelectedSearch } from \"../../store/ui/actions\";\nimport styles from \"./SearchTypeTabs.scss\";\n\nfunction SearchTypeTabs({\n  selectedSearch,\n  setSelectedSearch\n}) {\n  const selectES = useCallback(() => {\n    setSelectedSearch(\"es\");\n  }, [setSelectedSearch]);\n  const selectKendra = useCallback(() => {\n    setSelectedSearch(\"kendra\");\n  }, [setSelectedSearch]);\n  const selectBoth = useCallback(() => {\n    setSelectedSearch(\"both\");\n  }, [setSelectedSearch]);\n  const {\n    0: width,\n    1: setWidth\n  } = useState(window.innerWidth);\n  useEffect(() => {\n    function resized() {\n      setWidth(window.innerWidth);\n    }\n\n    window.addEventListener(\"resize\", resized);\n    return () => {\n      window.removeEventListener(\"resize\", resized);\n    };\n  }, []);\n  const canShowSideBySide = useMemo(() => width >= 1000, [width]);\n  useEffect(() => {\n    if (selectedSearch === \"both\" && !canShowSideBySide) {\n      setSelectedSearch(\"es\");\n    }\n  }, [selectedSearch, canShowSideBySide]);\n  return __jsx(\"div\", {\n    className: styles.wrapper\n  }, __jsx(\"a\", {\n    className: cs(styles.tab, selectedSearch === \"es\" && styles.selected),\n    onClick: selectES\n  }, \"Amazon ES\", __jsx(\"span\", null, \"Keyword Search Results\")), __jsx(\"a\", {\n    className: cs(styles.tab, selectedSearch === \"kendra\" && styles.selected),\n    onClick: selectKendra\n  }, \"Amazon Kendra\", __jsx(\"span\", null, \"Semantic Search Results\")), canShowSideBySide ? __jsx(\"a\", {\n    className: cs(styles.tab, selectedSearch === \"both\" && styles.selected),\n    onClick: selectBoth\n  }, \"Amazon ES and Amazon Kendra\", __jsx(\"span\", null, \"Compare Search Technologies\")) : null);\n}\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    selectedSearch: getSelectedSearch(state)\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    setSelectedSearch: type => dispatch(setSelectedSearch(type))\n  };\n})(SearchTypeTabs);","map":null,"metadata":{},"sourceType":"module"}