{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useState, useEffect, useRef } from 'react';\nimport Button, { BUTTON_PALETTES } from '../../components/Button/Button';\nimport Card from '../../components/Card/Card';\nimport DocumentList from '../../components/DocumentList/DocumentList';\nimport FeatureTooltip from '../../components/FeatureTooltip/FeatureTooltip';\nimport FormInput from '../../components/FormInput/FormInput';\nimport Highlight from '../../components/Highlight/Highlight';\nimport Loading from '../../components/Loading/Loading';\nimport Pager from '../../components/Pager/Pager';\nimport SearchResults from '../../components/SearchResults/SearchResults';\nimport Tabs from '../../components/Tabs/Tabs';\nimport { searchResults } from '../../constants/test-data';\nimport css from './styleguide.scss';\n\nStyleguide.getInitialProps = function () {\n  return {\n    pageTitle: 'Styleguide'\n  };\n};\n\nfunction Styleguide() {\n  const {\n    typeRefs: {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      lead,\n      primary,\n      secondary,\n      small\n    },\n    typeSizes: {\n      h1Size,\n      h2Size,\n      h3Size,\n      h4Size,\n      h5Size,\n      leadSize,\n      primarySize,\n      secondarySize,\n      smallSize\n    }\n  } = useTypeResizer();\n  const colorClasses = Object.keys(css).filter(className => className.indexOf('color-') === 0);\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Styleguide\"), __jsx(\"section\", null, __jsx(\"h3\", null, \"Typography\"), __jsx(\"p\", null, \"Use the mixins in \", __jsx(\"code\", null, \"app/styles/shared/_typography.scss\"), \" to apply type styles to an element.\"), __jsx(\"pre\", null, __jsx(\"code\", null, `\n@import '../styles/shared/index';\n\n.custom-heading {\n  @include type-heading-h1;\n}\n\n.white-heading {\n  @include type-heading-h1(color(white)); // color override\n}\n\n`)), __jsx(\"hr\", null), __jsx(\"h4\", null, \"Heading Mixin Samples\"), __jsx(\"h1\", {\n    ref: h1\n  }, \"H1, \", h1Size, \" Ember Bold (type-heading-h1)\"), __jsx(\"h2\", {\n    ref: h2\n  }, \"H2, \", h2Size, \" Ember Medium (type-heading-h2)\"), __jsx(\"h3\", {\n    ref: h3\n  }, \"H3, \", h3Size, \" Ember Regular (type-heading-h3)\"), __jsx(\"h4\", {\n    ref: h4\n  }, \"H4, \", h4Size, \" Ember Bold (type-heading-h4)\"), __jsx(\"h5\", {\n    ref: h5\n  }, \"H5, \", h5Size, \" Ember Bold (type-heading-h5)\"), __jsx(\"hr\", null), __jsx(\"h4\", null, \"Body Mixin Samples\"), __jsx(\"p\", {\n    className: css.lead,\n    ref: lead\n  }, \"P, \", leadSize, \" Ember Regular (type-body-lead)\"), __jsx(\"p\", {\n    className: css.primary,\n    ref: primary\n  }, \"P, \", primarySize, \" Ember Regular (type-body-primary)\"), __jsx(\"p\", {\n    className: css.supplemental,\n    ref: secondary\n  }, \"P, \", secondarySize, \" Ember Regular (type-body-secondary)\"), __jsx(\"p\", {\n    className: css.small,\n    ref: small\n  }, \"P, \", smallSize, \" Ember Bold (type-body-supplemental)\"), __jsx(\"hr\", null)), __jsx(\"section\", null, __jsx(\"h3\", null, \"Colors\"), __jsx(\"p\", null, \"Use the \", __jsx(\"code\", null, \"color\"), \" function defined in \", __jsx(\"code\", null, \"app/styles/shared/_colors.scss\"), \". Do not use hard-coded hex codes or rgb/hsl values.\"), __jsx(\"pre\", null, __jsx(\"code\", null, `\n@import '../styles/shared/colors';\n\n.some-element {\n  background: color(blue);\n  color: color(blue, 10);\n}\n\n`)), __jsx(\"p\", null, \"It is considered better practice to assign colors to semantic variables instead of as direct values of a property.\"), __jsx(\"pre\", null, __jsx(\"code\", null, `\n@import '../styles/shared/colors';\n\n$button-border-color: color(blue);\n\n.button {\n  border-color: $button-border-color;\n}\n\n`)), __jsx(\"ul\", {\n    className: css.colors\n  }, colorClasses.map(colorClass => {\n    return __jsx(\"li\", {\n      className: css[colorClass],\n      key: colorClass\n    }, __jsx(\"span\", null, colorClass.replace('color-', '').replace('-core', '').replace('-', ' ')));\n  }))), __jsx(\"section\", null, __jsx(\"h2\", null, \"Grids\"), __jsx(\"p\", null, \"This site uses\", ' ', __jsx(\"a\", {\n    href: \"http://oddbird.net/susy/\",\n    target: \"_blank\"\n  }, \"Susy 3.0\"), ' ', \"for grids. There is no site-wide grid system that all items adhere to. Instead, Susy provides a few helper functions that return widths of colspans and gutters. There are intentionally no global classes or markup schemes to aid in creating grids \\u2014 these are usually too rigid and require lots of unnecessary markup to get things working. The grid configs and mixins for common layouts can be found in\", ' ', __jsx(\"code\", null, `app/styles/shared/_grids.scss`)), __jsx(\"div\", {\n    className: css.grid\n  })), __jsx(\"section\", {\n    className: css.buttons\n  }, __jsx(\"h2\", null, \"Buttons\"), __jsx(\"p\", null, \"Use the \", __jsx(\"code\", null, `palette`), \" prop to change the button color. Available palette values: \", BUTTON_PALETTES.join(', '), \". The default palette is orange. NOTE: Buttons have a min-width set.\"), __jsx(\"div\", null, __jsx(\"h3\", null, \"Primary\"), __jsx(\"p\", null, __jsx(\"code\", null, `inverted={false}`), \" (default)\"), BUTTON_PALETTES.map(palette => __jsx(\"p\", {\n    key: palette\n  }, __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    palette: palette\n  }, \"Sample Button\"), __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    palette: palette\n  }, \"...\"))), __jsx(\"p\", null, __jsx(\"code\", null, `disabled={true}`)), __jsx(\"p\", null, __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    disabled: true\n  }, \"Sample Button\"), __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    disabled: true\n  }, \"...\"))), __jsx(\"div\", null, __jsx(\"h3\", null, \"Secondary\"), __jsx(\"p\", null, __jsx(\"code\", null, `inverted={true}`)), BUTTON_PALETTES.map(palette => __jsx(\"p\", {\n    key: palette\n  }, __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    inverted: true,\n    palette: palette\n  }, \"Sample Button\"), __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    inverted: true,\n    palette: palette\n  }, \"...\"))), __jsx(\"p\", null, __jsx(\"code\", null, `disabled={true}`)), __jsx(\"p\", null, __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    inverted: true,\n    disabled: true\n  }, \"Sample Button\"), __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    inverted: true,\n    disabled: true\n  }, \"...\"))), __jsx(\"div\", null, __jsx(\"h3\", null, \"Simple\"), __jsx(\"p\", null, \"The inverted prop is ignored for simple buttons.\"), __jsx(\"p\", null, __jsx(\"code\", null, `simple={true}`)), __jsx(\"p\", null, BUTTON_PALETTES.map(palette => __jsx(Button, {\n    key: palette,\n    link: {\n      href: '#'\n    },\n    simple: true,\n    palette: palette\n  }, \"Sample Button\"))), __jsx(\"p\", null, __jsx(\"code\", null, `disabled={true}`)), __jsx(\"p\", null, __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    simple: true,\n    disabled: true\n  }, \"Sample Button\"))), __jsx(\"div\", null, __jsx(\"h3\", null, \"With Icons\"), __jsx(\"p\", null, BUTTON_PALETTES.map(palette => __jsx(Button, {\n    key: palette,\n    link: {\n      href: '#'\n    },\n    simple: true,\n    palette: palette\n  }, __jsx(\"svg\", {\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m15.4076667 4.52484732h-6.05924085v-2.56410764c0-1.67321315 1.35640725-3.0296204 3.02962045-3.0296204 1.6732131 0 3.0296204 1.35640725 3.0296204 3.0296204zm0 1.12134639v14.53506789l-2.2482447 4.9740929c-.227471.5032647-.8198494.7268396-1.3231141.4993686-.2356073-.1064924-.4208099-.3001023-.5167445-.5402022l-1.97113755-4.9332593v-14.53506789z\",\n    fillRule: \"evenodd\",\n    transform: \"matrix(.70710678 .70710678 -.70710678 .70710678 12.349321 -5.139053)\"\n  })), __jsx(\"span\", null, \"Sample Button\")))), __jsx(\"p\", null, BUTTON_PALETTES.map(palette => __jsx(Button, {\n    key: palette,\n    link: {\n      href: '#'\n    },\n    simple: true,\n    palette: palette\n  }, __jsx(\"span\", null, \"Sample Button\"), __jsx(\"svg\", {\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m15.4076667 4.52484732h-6.05924085v-2.56410764c0-1.67321315 1.35640725-3.0296204 3.02962045-3.0296204 1.6732131 0 3.0296204 1.35640725 3.0296204 3.0296204zm0 1.12134639v14.53506789l-2.2482447 4.9740929c-.227471.5032647-.8198494.7268396-1.3231141.4993686-.2356073-.1064924-.4208099-.3001023-.5167445-.5402022l-1.97113755-4.9332593v-14.53506789z\",\n    fillRule: \"evenodd\",\n    transform: \"matrix(.70710678 .70710678 -.70710678 .70710678 12.349321 -5.139053)\"\n  }))))), __jsx(\"p\", null, BUTTON_PALETTES.map(palette => __jsx(Button, {\n    key: palette,\n    link: {\n      href: '#'\n    },\n    palette: palette\n  }, __jsx(\"span\", null, \"Sample Button\"), __jsx(\"svg\", {\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m15.4076667 4.52484732h-6.05924085v-2.56410764c0-1.67321315 1.35640725-3.0296204 3.02962045-3.0296204 1.6732131 0 3.0296204 1.35640725 3.0296204 3.0296204zm0 1.12134639v14.53506789l-2.2482447 4.9740929c-.227471.5032647-.8198494.7268396-1.3231141.4993686-.2356073-.1064924-.4208099-.3001023-.5167445-.5402022l-1.97113755-4.9332593v-14.53506789z\",\n    fillRule: \"evenodd\",\n    transform: \"matrix(.70710678 .70710678 -.70710678 .70710678 12.349321 -5.139053)\"\n  }))))), __jsx(\"p\", null, __jsx(\"code\", null, `disabled={true}`)), __jsx(\"p\", null, __jsx(Button, {\n    link: {\n      href: '#'\n    },\n    simple: true,\n    disabled: true\n  }, \"Sample Button\", __jsx(\"svg\", {\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m15.4076667 4.52484732h-6.05924085v-2.56410764c0-1.67321315 1.35640725-3.0296204 3.02962045-3.0296204 1.6732131 0 3.0296204 1.35640725 3.0296204 3.0296204zm0 1.12134639v14.53506789l-2.2482447 4.9740929c-.227471.5032647-.8198494.7268396-1.3231141.4993686-.2356073-.1064924-.4208099-.3001023-.5167445-.5402022l-1.97113755-4.9332593v-14.53506789z\",\n    fillRule: \"evenodd\",\n    transform: \"matrix(.70710678 .70710678 -.70710678 .70710678 12.349321 -5.139053)\"\n  })))))), __jsx(\"section\", null, __jsx(\"h2\", null, \"Form Controls\"), __jsx(\"h3\", null, \"Single Line Text Inputs\"), __jsx(\"p\", null, __jsx(FormInput, {\n    label: \"Default text input\",\n    defaultValue: \"Some default value\"\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    label: \"Disabled text input\",\n    defaultValue: \"Some default value\",\n    disabled: true\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    label: \"Erroneous text input\",\n    defaultValue: \"Some default value\",\n    error: true\n  })), __jsx(\"hr\", null), __jsx(\"h3\", null, \"Multi Line Text Inputs\"), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"textarea\",\n    label: \"Default textarea input\",\n    defaultValue: \"Some default value\"\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"textarea\",\n    label: \"Disabled textarea input\",\n    defaultValue: \"Some default value\",\n    disabled: true\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"textarea\",\n    label: \"Erroneous textarea input\",\n    defaultValue: \"Some default value\",\n    error: true\n  })), __jsx(\"hr\", null), __jsx(\"h3\", null, \"Search Inputs\"), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"search\",\n    defaultValue: \"Search term...\"\n  })), __jsx(\"hr\", null), __jsx(\"h3\", null, \"Checkbox Inputs\"), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"checkbox\",\n    label: \"Default checkbox\"\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"checkbox\",\n    label: \"Disabled checkbox\",\n    disabled: true\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"checkbox\",\n    label: \"Erroneous checkbox\",\n    error: true\n  })), __jsx(\"hr\", null), __jsx(\"h3\", null, \"Radio Inputs\"), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"radio\",\n    label: \"Default radio\"\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"radio\",\n    label: \"Disabled radio\",\n    disabled: true\n  })), __jsx(\"p\", null, __jsx(FormInput, {\n    type: \"radio\",\n    label: \"Erroneous radio\",\n    error: true\n  }))), __jsx(\"section\", null, __jsx(\"h2\", null, \"Tables\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Key\"), __jsx(\"th\", null, \"Value\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, \"some-key\"), __jsx(\"td\", null, \"some-value\")), __jsx(\"tr\", {\n    className: \"selected\"\n  }, __jsx(\"td\", null, \"some-selected-key\"), __jsx(\"td\", null, \"some-selected-value\")), __jsx(\"tr\", null, __jsx(\"td\", null, \"some-key\"), __jsx(\"td\", null, \"some-value\")), __jsx(\"tr\", null, __jsx(\"td\", null, \"some-key\"), __jsx(\"td\", {\n    className: \"selected\"\n  }, \"some-selected-value\"))))), __jsx(\"section\", null, __jsx(\"h2\", null, \"Document List\"), __jsx(DocumentList, {\n    items: [{\n      title: 'Document-Name_1.pdf',\n      link: {\n        href: '#'\n      }\n    }, {\n      title: 'Document-Name_2.pdf',\n      link: {\n        href: '#'\n      },\n      pending: true\n    }, {\n      title: 'Document-Name_3.pdf',\n      link: {\n        href: '#'\n      }\n    }, {\n      title: 'Document-Name_4.pdf',\n      link: {\n        href: '#'\n      }\n    }, {\n      title: 'Document-Name_5.pdf',\n      link: {\n        href: '#'\n      }\n    }]\n  })), __jsx(\"section\", null, __jsx(\"h2\", null, \"Cards\"), __jsx(\"h3\", null, \"Without Icons\"), __jsx(Card, {\n    title: \"Black Card Title\",\n    subtitle: \"This is the subtitle.\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    title: \"Blue Card Title\",\n    palette: \"blue\",\n    subtitle: \"This is the subtitle.\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    title: \"Teal Card Title\",\n    palette: \"teal\",\n    subtitle: \"This is the subtitle.\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    title: \"Purple Card Title\",\n    palette: \"purple\",\n    subtitle: \"This is the subtitle.\"\n  }), __jsx(\"hr\", null), __jsx(\"h3\", null, \"With Icons\"), __jsx(Card, {\n    palette: \"blue\",\n    icon: __jsx(\"img\", {\n      src: \"/static/images/icon_cloud-search.svg\"\n    }),\n    title: \"Conduct a search\",\n    subtitle: \"Find keys, values and words across the documents.\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    palette: \"teal\",\n    icon: __jsx(\"img\", {\n      src: \"/static/images/icon_redact.svg\"\n    }),\n    title: \"Make redactions\",\n    subtitle: \"Redact values (names, SS#s etc) across these documents.\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    palette: \"purple\",\n    icon: __jsx(\"img\", {\n      src: \"/static/images/icon_workflow.svg\"\n    }),\n    title: \"Open a document\",\n    subtitle: \"Chose a document on the left to see how it was formatted.\"\n  }), __jsx(\"hr\", null), __jsx(\"h3\", null, \"Different Sizes\"), __jsx(Card, {\n    title: \"Loud card\",\n    subtitle: \"Bigger is sometimes better\",\n    volume: \"loud\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    title: \"Conversational card\",\n    subtitle: \"Default state\",\n    volume: \"conversational\"\n  }), __jsx(\"hr\", null), __jsx(Card, {\n    title: \"Quiet card\",\n    subtitle: \"Just a whisper will do\",\n    volume: \"quiet\"\n  })), __jsx(\"section\", null, __jsx(\"h2\", null, \"Loading Spinner\"), __jsx(\"p\", null, \"The spinner overlays/fills its closest \", __jsx(\"em\", null, \"positioned\"), \" container, and covers it with a semi-transparent background. Its default size is \", Loading.defaultProps.size, \"px.\"), __jsx(\"div\", {\n    className: css.loading\n  }, __jsx(\"p\", null, \"This is some content inside the filled container.\"), __jsx(Loading, null)), __jsx(\"p\", null, \"The size prop allows you to change the size of the spinner: \", __jsx(\"code\", null, `size={50}`)), __jsx(\"div\", {\n    className: css.loading\n  }, __jsx(\"p\", null, \"This is some content inside the filled container.\"), __jsx(Loading, {\n    size: 50\n  })), __jsx(\"p\", null, \"You can turn of the overlay effect by setting \", __jsx(\"code\", null, `overlay={false}`)), __jsx(\"div\", {\n    className: css.loading\n  }, __jsx(\"p\", null, \"This is some content inside the unfilled container.\"), __jsx(Loading, {\n    overlay: false\n  }))), __jsx(\"section\", null, __jsx(\"h2\", null, \"Feature Tooltip\"), __jsx(FeatureTooltip, {\n    title: \"Some cool feature\",\n    description: \"This is a longer description of what the feature is, how it works, and why it's so cool.\"\n  })), __jsx(\"section\", null, __jsx(\"h2\", null, \"Tabs\"), __jsx(Tabs, {\n    items: [{\n      id: 'text',\n      title: 'Text',\n      content: __jsx(\"div\", null, \"Text Contents\")\n    }, {\n      id: 'forms',\n      title: 'Forms',\n      content: __jsx(\"div\", null, \"Forms Contents\")\n    }, {\n      id: 'tables',\n      title: 'Tables',\n      content: __jsx(\"div\", null, \"Tables Contents\")\n    }, {\n      id: 'source',\n      title: 'Source',\n      content: __jsx(\"div\", null, \"Source Contents\")\n    }],\n    defaultActiveTabId: \"text\"\n  })), __jsx(\"section\", null, __jsx(\"h2\", null, \"Pager\"), __jsx(Pager, {\n    pageTotal: 4\n  }, currentPageNumber => __jsx(\"p\", null, \"Page \", currentPageNumber, \" paragraph\"))), __jsx(\"section\", null, __jsx(\"h2\", null, \"Highlight\"), __jsx(\"p\", null, __jsx(Highlight, {\n    search: \"brown fox\"\n  }, \"The quick brown fox jumps over the lazy dog...\"))), __jsx(\"section\", null, __jsx(\"h2\", null, \"SearchResults\"), __jsx(SearchResults, {\n    results: searchResults,\n    searchQuery: \"foreign\",\n    searchStatus: \"success\"\n  })));\n}\n\nfunction useTypeResizer() {\n  const h1 = useRef(null);\n  const h2 = useRef(null);\n  const h3 = useRef(null);\n  const h4 = useRef(null);\n  const h5 = useRef(null);\n  const lead = useRef(null);\n  const primary = useRef(null);\n  const secondary = useRef(null);\n  const small = useRef(null);\n  const {\n    0: h1Size,\n    1: setH1Size\n  } = useState(0);\n  const {\n    0: h2Size,\n    1: setH2Size\n  } = useState(0);\n  const {\n    0: h3Size,\n    1: setH3Size\n  } = useState(0);\n  const {\n    0: h4Size,\n    1: setH4Size\n  } = useState(0);\n  const {\n    0: h5Size,\n    1: setH5Size\n  } = useState(0);\n  const {\n    0: leadSize,\n    1: setLeadSize\n  } = useState(0);\n  const {\n    0: primarySize,\n    1: setPrimarySize\n  } = useState(0);\n  const {\n    0: secondarySize,\n    1: setSecondarySize\n  } = useState(0);\n  const {\n    0: smallSize,\n    1: setSmallSize\n  } = useState(0);\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleResize() {\n    setH1Size(getFontSize(h1.current));\n    setH2Size(getFontSize(h2.current));\n    setH3Size(getFontSize(h3.current));\n    setH4Size(getFontSize(h4.current));\n    setH5Size(getFontSize(h5.current));\n    setLeadSize(getFontSize(lead.current));\n    setPrimarySize(getFontSize(primary.current));\n    setSecondarySize(getFontSize(secondary.current));\n    setSmallSize(getFontSize(small.current));\n  }\n\n  function getFontSize(element) {\n    return parseInt(getComputedStyle(element)['font-size'], 10);\n  }\n\n  return {\n    typeRefs: {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      lead,\n      primary,\n      secondary,\n      small\n    },\n    typeSizes: {\n      h1Size,\n      h2Size,\n      h3Size,\n      h4Size,\n      h5Size,\n      leadSize,\n      primarySize,\n      secondarySize,\n      smallSize\n    }\n  };\n}\n\nexport default Styleguide;","map":null,"metadata":{},"sourceType":"module"}