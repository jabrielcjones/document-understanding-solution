{"ast":null,"code":"var __jsx = React.createElement;\n\n/**********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the License). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React, { useMemo, useState, useCallback } from \"react\";\nimport KendraHighlightedText from \"../KendraHighlightedText/KendraHighlightedText\";\nimport KendraResultFooter from \"../KendraResultFooter/KendraResultFooter\";\nimport css from \"./KendraFAQItem.scss\";\nimport cs from \"classnames\";\nexport default function KendraFAQItem({\n  item,\n  submitFeedback\n}) {\n  const question = useMemo(() => item.AdditionalAttributes.find(att => att.Key === \"QuestionText\"), [item]);\n  const answer = useMemo(() => item.AdditionalAttributes.find(att => att.Key === \"AnswerText\"), [item]);\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n  const toggleExpanded = useCallback(() => setExpanded(e => !e), []);\n  return __jsx(\"div\", {\n    className: css.item,\n    \"data-walkthrough\": \"faq\"\n  }, __jsx(\"div\", {\n    className: cs(css.question, expanded && css.expanded),\n    onClick: toggleExpanded\n  }, __jsx(\"h3\", null, __jsx(KendraHighlightedText, {\n    textWithHighlights: question.Value.TextWithHighlightsValue\n  }))), expanded ? __jsx(\"div\", {\n    className: css.answer\n  }, __jsx(\"p\", null, __jsx(KendraHighlightedText, {\n    textWithHighlights: answer.Value.TextWithHighlightsValue\n  })), __jsx(KendraResultFooter, {\n    result: item,\n    submitFeedback: submitFeedback\n  })) : null);\n}","map":null,"metadata":{},"sourceType":"module"}